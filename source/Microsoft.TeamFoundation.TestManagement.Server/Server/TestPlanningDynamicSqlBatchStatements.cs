// Decompiled with JetBrains decompiler
// Type: Microsoft.TeamFoundation.TestManagement.Server.TestPlanningDynamicSqlBatchStatements
// Assembly: Microsoft.TeamFoundation.TestManagement.Server, Version=19.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: F9B71993-88CC-4B0D-89B6-4ADDEEAB3DE1
// Assembly location: C:\Program Files\Azure DevOps Server 2022\Application Tier\Web Services\bin\Microsoft.TeamFoundation.TestManagement.Server.dll

namespace Microsoft.TeamFoundation.TestManagement.Server
{
  internal static class TestPlanningDynamicSqlBatchStatements
  {
    internal static string dynprc_QueryPoints = "\r\n\r\n               SET NOCOUNT ON\r\n\r\n               DECLARE @sql    NVARCHAR(MAX)\r\n               DECLARE @param  NVARCHAR(100)\r\n               \r\n               -- Procedure: dbo.dynprc_QueryPoints\r\n\r\n               SET @param = '@valueListTable typ_IntStringPairTypeTable READONLY'\r\n\r\n               IF (@whereClause LIKE '%RecursiveSuiteId%')\r\n               BEGIN\r\n                   SET @sql = 'SELECT DISTINCT PointId, State, TestCaseId\r\n                               FROM vw_RecursivePoints ' + @whereClause + @orderByClause\r\n               END\r\n               ELSE\r\n               BEGIN\r\n                   SET @sql = 'SELECT PointId, State, TestCaseId\r\n                               FROM vw_Point ' + @whereClause + @orderByClause\r\n               END\r\n\r\n               -- SDL EXCEPTION: Column name and number of columns in where clause is dynamic.\r\n               -- Approved by Security Advisor [Bob Fruth (MSEC)] on 4/13/2012\r\n               EXEC sp_executesql @sql, @param, @valueListTable";
    internal static string dynprc_QueryPoints2 = "\r\n\r\n               SET NOCOUNT ON\r\n\r\n               DECLARE @sql    NVARCHAR(MAX)\r\n               DECLARE @param  NVARCHAR(100)\r\n               \r\n               -- Procedure: dbo.dynprc_QueryPoints\r\n\r\n               SET @param = '@valueListTable typ_IntStringPairTypeTable READONLY'\r\n\r\n               IF (@whereClause LIKE '%RecursiveSuiteId%')\r\n               BEGIN\r\n                   SET @sql = 'SELECT DISTINCT PointId, State, TestCaseId, LastResultOutcome, LastResultState, ConfigurationName, AssignedTo, SuiteName, ConfigurationId\r\n                               FROM vw_RecursivePoints ' + @whereClause + @orderByClause\r\n               END\r\n               ELSE\r\n               BEGIN\r\n                   SET @sql = 'SELECT PointId, State, TestCaseId, LastResultOutcome, LastResultState, ConfigurationName, AssignedTo, SuiteName, ConfigurationId\r\n                               FROM vw_Point ' + @whereClause + @orderByClause\r\n               END\r\n\r\n               -- SDL EXCEPTION: Column name and number of columns in where clause is dynamic.\r\n               -- Approved by Security Advisor [Bob Fruth (MSEC)] on 4/13/2012\r\n               EXEC sp_executesql @sql, @param, @valueListTable";
    internal static string dynprc_QueryPoints3 = "\r\n\r\n               SET NOCOUNT ON\r\n\r\n               DECLARE @sql    NVARCHAR(MAX)\r\n               DECLARE @param  NVARCHAR(100)\r\n               \r\n               -- Procedure: dbo.dynprc_QueryPoints\r\n\r\n               SET @param = '@valueListTable typ_IntStringPairTypeTable READONLY'\r\n\r\n               IF (@whereClause LIKE '%RecursiveSuiteId%')\r\n               BEGIN\r\n                   SET @sql = 'SELECT DISTINCT PointId, State, TestCaseId, LastResultOutcome, LastResultState, ConfigurationName, AssignedTo, SuiteName, ConfigurationId, SequenceNumber\r\n                               FROM vw_RecursivePoints ' + @whereClause + @orderByClause\r\n               END\r\n               ELSE\r\n               BEGIN\r\n                   SET @sql = 'SELECT PointId, State, TestCaseId, LastResultOutcome, LastResultState, ConfigurationName, AssignedTo, SuiteName, ConfigurationId, SequenceNumber\r\n                               FROM vw_Point ' + @whereClause + @orderByClause\r\n               END\r\n\r\n               -- SDL EXCEPTION: Column name and number of columns in where clause is dynamic.\r\n               -- Approved by Security Advisor [Bob Fruth (MSEC)] on 4/13/2012\r\n               EXEC sp_executesql @sql, @param, @valueListTable";
    internal static string dynprc_QueryPointsWithLastResults = "\r\n\r\n               SET NOCOUNT ON\r\n\r\n               DECLARE @sql    NVARCHAR(MAX)\r\n               DECLARE @param  NVARCHAR(100)\r\n               \r\n               -- Procedure: dbo.dynprc_QueryPoints\r\n\r\n               SET @param = '@valueListTable typ_IntStringPairTypeTable READONLY'\r\n\r\n               IF (@whereClause LIKE '%RecursiveSuiteId%')\r\n               BEGIN\r\n                   SET @sql = 'SELECT DISTINCT PointId, State, TestCaseId, LastResultOutcome, LastResultState, ConfigurationName, AssignedTo, SuiteName, BuildNumber, LastRunBy, LastRunDuration, ConfigurationId\r\n                               FROM vw_RecursiveWithLatestResultDetails ' + @whereClause + @orderByClause\r\n               END\r\n               ELSE\r\n               BEGIN\r\n                   SET @sql = 'SELECT DISTINCT PointId, State, TestCaseId, LastResultOutcome, LastResultState, ConfigurationName, AssignedTo, SuiteName, BuildNumber, LastRunBy, LastRunDuration, ConfigurationId\r\n                               FROM vw_PointWithLatestResultDetails ' + @whereClause + @orderByClause\r\n               END\r\n\r\n               -- SDL EXCEPTION: Column name and number of columns in where clause is dynamic.\r\n               -- Approved by Security Advisor [Bob Fruth (MSEC)] on 4/13/2012\r\n               EXEC sp_executesql @sql, @param, @valueListTable";
    internal static string dynprc_QueryPointsWithLastResults2 = "\r\n\r\n               SET NOCOUNT ON\r\n\r\n               DECLARE @sql    NVARCHAR(MAX)\r\n               DECLARE @param  NVARCHAR(100)\r\n               \r\n               -- Procedure: dbo.dynprc_QueryPoints\r\n\r\n               SET @param = '@valueListTable typ_IntStringPairTypeTable READONLY'\r\n\r\n               IF (@whereClause LIKE '%RecursiveSuiteId%')\r\n               BEGIN\r\n                   SET @sql = 'SELECT DISTINCT PointId, State, TestCaseId, LastResultOutcome, LastResultState, ConfigurationName, AssignedTo, SuiteName, BuildNumber, LastRunBy, LastRunDuration, ConfigurationId, SequenceNumber\r\n                               FROM vw_RecursiveWithLatestResultDetails ' + @whereClause + @orderByClause\r\n               END\r\n               ELSE\r\n               BEGIN\r\n                   SET @sql = 'SELECT DISTINCT PointId, State, TestCaseId, LastResultOutcome, LastResultState, ConfigurationName, AssignedTo, SuiteName, BuildNumber, LastRunBy, LastRunDuration, ConfigurationId, SequenceNumber\r\n                               FROM vw_PointWithLatestResultDetails ' + @whereClause + @orderByClause\r\n               END\r\n\r\n               -- SDL EXCEPTION: Column name and number of columns in where clause is dynamic.\r\n               -- Approved by Security Advisor [Bob Fruth (MSEC)] on 4/13/2012\r\n               EXEC sp_executesql @sql, @param, @valueListTable";
    internal static string dynprc_QuerySuitePointCounts = "\r\n\r\n               SET NOCOUNT ON\r\n\r\n               DECLARE @sql    NVARCHAR(MAX)\r\n               DECLARE @param  NVARCHAR(100)\r\n\r\n               -- Procedure: dbo.dynprc_QuerySuitePointCounts\r\n\r\n               SET @param = '@valueListTable typ_IntStringPairTypeTable READONLY'\r\n\r\n               SET @sql = 'SELECT DISTINCT SuitePath, COUNT(*) AS PointCount \r\n                           FROM   vw_Point ' + @whereClause + ' GROUP BY SuitePath'\r\n\r\n               -- SDL EXCEPTION: Column name and number of columns in where clause is dynamic.\r\n               -- Approved by Security Advisor [Bob Fruth (MSEC)] on 4/13/2012\r\n               EXEC sp_executesql @sql, @param, @valueListTable";
    internal static string dynprc_QueryTestPointStatistics = "\r\n\r\n               SET NOCOUNT ON\r\n\r\n               DECLARE @sql    NVARCHAR(MAX)\r\n               DECLARE @param  NVARCHAR(100)\r\n\r\n               -- Procedure: dynprc_QueryTestPointStatistics\r\n\r\n               SET @param = '@valueListTable typ_IntStringPairTypeTable READONLY'\r\n\r\n               IF(@whereClause LIKE '%RecursiveSuiteId%')\r\n               BEGIN\r\n                   SET @sql = 'SELECT State, LastResultState, LastResultOutcome, FailureType,\r\n                                      LastResolutionStateId, COUNT(DISTINCT PointId) AS PointCount\r\n                               FROM vw_RecursivePoints ' +\r\n                               @whereClause + \r\n                             ' GROUP BY State, LastResultState, LastResultOutcome, FailureType, LastResolutionStateId'\r\n               END\r\n               ELSE\r\n               BEGIN\r\n                   SET @sql = 'SELECT State, LastResultState, LastResultOutcome, FailureType,\r\n                                      LastResolutionStateId, COUNT(PointId) AS PointCount\r\n                               FROM vw_Point ' +\r\n                               @whereClause +\r\n                             ' GROUP BY State, LastResultState, LastResultOutcome, FailureType, LastResolutionStateId'\r\n               END\r\n\r\n               -- SDL EXCEPTION: Column name and number of columns in where clause is dynamic.\r\n               -- Approved by Security Advisor[Bob Fruth(MSEC)] on 4/13/2012\r\n               EXEC sp_executesql @sql, @param, @valueListTable";
    internal static string dynprc_QueryTestPointStatisticsByPivot = "\r\n\r\n               SET NOCOUNT ON\r\n\r\n               DECLARE @sql    NVARCHAR(MAX)\r\n               DECLARE @param  NVARCHAR(100)\r\n\r\n               -- Procedure: dynprc_QueryTestPointStatisticsByPivot\r\n\r\n               SET @param = '@valueListTable typ_IntStringPairTypeTable READONLY'\r\n\r\n               IF (@whereClause LIKE '%RecursiveSuiteId%')\r\n               BEGIN\r\n                   SET @sql = 'SELECT ' + @pivot + ', State, LastResultState, LastResultOutcome, FailureType, LastResolutionStateId,\r\n                                          COUNT(DISTINCT PointId) AS PointCount\r\n                               FROM vw_RecursivePoints ' +\r\n                               @whereClause +\r\n                             ' GROUP BY ' + @pivot + ', State, LastResultState, LastResultOutcome, FailureType, LastResolutionStateId'\r\n               END\r\n               ELSE\r\n               BEGIN\r\n                   SET @sql = 'SELECT '+ @pivot + ', State, LastResultState, LastResultOutcome, FailureType, LastResolutionStateId,\r\n                                         COUNT(PointId) AS PointCount\r\n                               FROM vw_Point ' +\r\n                               @whereClause +\r\n                             ' GROUP BY ' + @pivot + ', State, LastResultState, LastResultOutcome, FailureType, LastResolutionStateId'\r\n               END\r\n\r\n               -- SDL EXCEPTION: Column name and number of columns in where clause is dynamic.\r\n               -- Approved by Security Advisor [Bob Fruth (MSEC)] on 4/13/2012\r\n               EXEC sp_executesql @sql, @param, @valueListTable";
    internal static string dynprc_QuerySessions2 = "\r\n\r\n               SET NOCOUNT ON\r\n\r\n               DECLARE @sql    NVARCHAR(MAX)\r\n               DECLARE @param  NVARCHAR(100)\r\n\r\n               -- Procedure: dbo.dynprc_QuerySessions2\r\n\r\n               SET @param = '@valueListTable typ_IntStringPairTypeTable READONLY'\r\n\r\n               SET @sql =  'SELECT  SessionId, Title, CreationDate, LastUpdated, Owner, State, BuildUri, BuildNumber, \r\n                                    ProjectUri, TestPlanId, StartDate, CompleteDate, Controller, DataspaceId, TestSettingsId, \r\n                                    PublicTestSettingsId, TestEnvironmentId, LastUpdatedBy, Revision, Comment, BugsCount, \r\n                                    Duration, Sprint, ComputerName, UserStoryId, CharterId, FeedbackId, ConfigurationId, \r\n                                    ConfigurationName, Notes, Bookmarks, BuildConfigurationId \r\n                            FROM   vw_Session ' + @whereClause + ' ' + @orderByClause\r\n\r\n               -- SDL EXCEPTION: Column name and number of columns in where clause is dynamic.\r\n               -- Approved by Security Advisor [Bob Fruth (MSEC)] on 4/13/2012\r\n               EXEC sp_executesql @sql, @param, @valueListTable";
    internal static string dynprc_QuerySuites = "\r\n\r\n               SET NOCOUNT ON\r\n\r\n               DECLARE @sql    NVARCHAR(MAX)\r\n               DECLARE @param  NVARCHAR(100)\r\n\r\n               -- Procedure: dbo.dynprc_QuerySuites\r\n\r\n               SET @param = '@valueListTable typ_IntStringPairTypeTable READONLY'\r\n\r\n               SET @sql = 'SELECT SuiteId, SuiteType, PlanId, Revision, RequirementId\r\n                           FROM   vw_Suite ' + @whereClause + ' ' + @orderByClause\r\n\r\n               -- SDL EXCEPTION: Column name and number of columns in where clause is dynamic.\r\n               -- Approved by Security Advisor[Bob Fruth(MSEC)] on 4/13/2012\r\n               EXEC sp_executesql @sql, @param, @valueListTable";
  }
}
