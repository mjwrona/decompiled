<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NoPermissionReadTeamException" xml:space="preserve">
    <value>You have no permission to read team(s) : {0}</value>
  </data>
  <data name="CardSettingsDuplicateAdditionalFieldsException" xml:space="preserve">
    <value>Field identifier '{0}' is present more than once.</value>
  </data>
  <data name="CardSettingsInvalidFieldIdentifierException" xml:space="preserve">
    <value>Field identifier '{0}' does not exist or is invalid.</value>
  </data>
  <data name="ViewPropertiesFormatException" xml:space="preserve">
    <value>The view properties are not in a valid format, for the specified type of the view.</value>
  </data>
  <data name="ViewRevisionMismatchException" xml:space="preserve">
    <value>VS403179: The revision does not match. Plan settings have been updated by another user.</value>
  </data>
  <data name="TeamFieldValuesContainsDuplicate" xml:space="preserve">
    <value>The team field value must be unique. The team field values contains these duplicate entries: {0}. </value>
  </data>
  <data name="ViewTypeDoesNotExistException" xml:space="preserve">
    <value>The view type does not exist.</value>
  </data>
  <data name="ViewNotFoundExceptionMessage" xml:space="preserve">
    <value>VS403161: The specified plan was not found. It may have been deleted or you do not have permission to view it.</value>
  </data>
  <data name="ViewPropertiesMissingException" xml:space="preserve">
    <value>The view's properties are missing. Please specify at least one property for the specified type of the view.</value>
  </data>
  <data name="NotAvailable" xml:space="preserve">
    <value>The API is removed from preview.</value>
  </data>
  <data name="PlanLimitExceededException" xml:space="preserve">
    <value>Unable to create plan because the number of plans exceeds the limit for this project.</value>
  </data>
  <data name="CardSettingsInvalidAdditionalFieldException" xml:space="preserve">
    <value>'{0}' field should not be specified as as additional field.</value>
  </data>
  <data name="CardSettingsMaxAdditionalFieldsExceededException" xml:space="preserve">
    <value>Number of additional fields exceeds the maximum limit of '{0}'.</value>
  </data>
  <data name="TeamFieldValuesNoTeamFieldValuesSelected" xml:space="preserve">
    <value>There are no team field values specified for your team. You must specify at least one team field value to enable features such as your product backlog or the task board.</value>
  </data>
  <data name="BoardPageWorkItemsLimitException" xml:space="preserve">
    <value>Number of work items paged for the board {0} is invalid.</value>
  </data>
  <data name="TeamDoesNotExistException" xml:space="preserve">
    <value>TF401501: The team does not exist in this timeline.</value>
  </data>
  <data name="CardSettingsInvalidFormatException" xml:space="preserve">
    <value>The card settings are not in a valid format.</value>
  </data>
</root>