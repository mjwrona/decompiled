// Decompiled with JetBrains decompiler
// Type: Microsoft.TeamFoundation.Git.Server.Resources
// Assembly: Microsoft.TeamFoundation.Git.Server, Version=19.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: E1F0714E-7EF5-4D28-9AF2-C8D8620EA079
// Assembly location: C:\Program Files\Azure DevOps Server 2022\Application Tier\Web Services\bin\Microsoft.TeamFoundation.Git.Server.dll

using System;
using System.Globalization;
using System.Reflection;
using System.Resources;

namespace Microsoft.TeamFoundation.Git.Server
{
  internal static class Resources
  {
    private static ResourceManager s_resMgr = new ResourceManager(nameof (Resources), typeof (Microsoft.TeamFoundation.Git.Server.Resources).GetTypeInfo().Assembly);
    public const string EmptySha1IdNotAllowed = "EmptySha1IdNotAllowed";
    public const string InvalidObjectId = "InvalidObjectId";
    public const string InvalidSha256Id = "InvalidSha256Id";
    public const string Sha1IdMustBeString = "Sha1IdMustBeString";
    public const string Sha1IdMustBeStringNoLine = "Sha1IdMustBeStringNoLine";
    public const string Sha1IdStreamCannotBeRead = "Sha1IdStreamCannotBeRead";
    public const string Sha256IdMustBeString = "Sha256IdMustBeString";
    public const string Sha256IdMustBeStringNoLine = "Sha256IdMustBeStringNoLine";
    public const string GitObjectsCannotBeAccessedDirectly = "GitObjectsCannotBeAccessedDirectly";
    public const string GitRepositoryNameAlreadyExists = "GitRepositoryNameAlreadyExists";
    public const string GitRepositoryNameStateConstrain = "GitRepositoryNameStateConstrain";
    public const string GitRepositoryNotFound = "GitRepositoryNotFound";
    public const string GitRefNotFound = "GitRefNotFound";
    public const string InvalidGitRefName = "InvalidGitRefName";
    public const string InvalidGitRefNameForTfs = "InvalidGitRefNameForTfs";
    public const string GitObjectTooLarge = "GitObjectTooLarge";
    public const string GitStorageContainerNotFound = "GitStorageContainerNotFound";
    public const string InvalidGitRepositoryName = "InvalidGitRepositoryName";
    public const string GitForcePushDenied = "GitForcePushDenied";
    public const string GitNeedsWritePermission = "GitNeedsWritePermission";
    public const string GitNeedsPermission = "GitNeedsPermission";
    public const string TheCurrentProject = "TheCurrentProject";
    public const string TheCurrentRepository = "TheCurrentRepository";
    public const string TheCurrentBranch = "TheCurrentBranch";
    public const string GitReferenceStale = "GitReferenceStale";
    public const string GitUnresolvableToCommit = "GitUnresolvableToCommit";
    public const string GitCommitDoesNotExist = "GitCommitDoesNotExist";
    public const string InvalidGitPackHeader = "InvalidGitPackHeader";
    public const string RecursionLimitReached = "RecursionLimitReached";
    public const string InvalidGitPackEntryHeader = "InvalidGitPackEntryHeader";
    public const string GitPackMissingBaseFile = "GitPackMissingBaseFile";
    public const string InflaterExceededLength = "InflaterExceededLength";
    public const string GitObjectDoesNotExist = "GitObjectDoesNotExist";
    public const string GitPackDoesNotExist = "GitPackDoesNotExist";
    public const string GitFileIsDeletable = "GitFileIsDeletable";
    public const string InvalidGitIndex = "InvalidGitIndex";
    public const string InvalidGitDeltaData = "InvalidGitDeltaData";
    public const string GitDeltaChainIsTooLong = "GitDeltaChainIsTooLong";
    public const string InvalidGitObjectType = "InvalidGitObjectType";
    public const string GitCommitArtifactFormat = "GitCommitArtifactFormat";
    public const string InvalidCommitArtifactUri = "InvalidCommitArtifactUri";
    public const string InvalidObjectStructure = "InvalidObjectStructure";
    public const string TreeObjectFailedToParseException_InvalidEntryName = "TreeObjectFailedToParseException_InvalidEntryName";
    public const string TreeObjectFailedToParseException_TooBig = "TreeObjectFailedToParseException_TooBig";
    public const string TreeObjectFailedToParseException_UnknownMode = "TreeObjectFailedToParseException_UnknownMode";
    public const string TreeObjectFailedToParseException_MissingNullAfterEntryName = "TreeObjectFailedToParseException_MissingNullAfterEntryName";
    public const string TreeObjectFailedToParseException_BadSortOrder = "TreeObjectFailedToParseException_BadSortOrder";
    public const string TreeObjectFailedToParseException_EndInsideObjectId = "TreeObjectFailedToParseException_EndInsideObjectId";
    public const string TreeObjectFailedToParseException_InvalidCharInMode = "TreeObjectFailedToParseException_InvalidCharInMode";
    public const string TreeObjectFailedToParseException_MissingSpaceBetweenModeAndName = "TreeObjectFailedToParseException_MissingSpaceBetweenModeAndName";
    public const string GitMissingReferencedObject = "GitMissingReferencedObject";
    public const string GitRepositoryPerProjectThresholdExceeded = "GitRepositoryPerProjectThresholdExceeded";
    public const string GitRefNotUpdated = "GitRefNotUpdated";
    public const string GitRepositoryMinimumPerProjectThresholdExceeded = "GitRepositoryMinimumPerProjectThresholdExceeded";
    public const string CachingDirectoryTooLong = "CachingDirectoryTooLong";
    public const string RefRejectedByPlugin = "RefRejectedByPlugin";
    public const string GitItemNotFound = "GitItemNotFound";
    public const string GitmodulesNotFound = "GitmodulesNotFound";
    public const string GitVersionNotFound = "GitVersionNotFound";
    public const string GitNoPreviousChange = "GitNoPreviousChange";
    public const string GitProtocolError = "GitProtocolError";
    public const string GitNeedsTeamProjectDeletePermission = "GitNeedsTeamProjectDeletePermission";
    public const string GitRepositoryProjectNameRequired = "GitRepositoryProjectNameRequired";
    public const string GitNeedsTeamProjectCreatePermission = "GitNeedsTeamProjectCreatePermission";
    public const string PullRequestExists = "PullRequestExists";
    public const string PullRequestNotFound = "PullRequestNotFound";
    public const string PullRequestNotEditable = "PullRequestNotEditable";
    public const string RepositoryRequiredForBranchFilter = "RepositoryRequiredForBranchFilter";
    public const string StatusNotValid = "StatusNotValid";
    public const string ReviewerAlreadySeen = "ReviewerAlreadySeen";
    public const string IdentityNotFound = "IdentityNotFound";
    public const string SourceBranchHasChanged = "SourceBranchHasChanged";
    public const string ObjectTooLargeToMerge = "ObjectTooLargeToMerge";
    public const string InvalidCodeReviewArtifactUri = "InvalidCodeReviewArtifactUri";
    public const string GitUpdatedTreatedBlobLikeTree = "GitUpdatedTreatedBlobLikeTree";
    public const string InvalidParameters = "InvalidParameters";
    public const string EndpointNotFound = "EndpointNotFound";
    public const string TooManyReviewersSupplied = "TooManyReviewersSupplied";
    public const string TooManyReceiversSupplied = "TooManyReceiversSupplied";
    public const string GitPullRequestRetargetAlreadyTargeted = "GitPullRequestRetargetAlreadyTargeted";
    public const string GitPullRequestRetargetSourceSameAsTarget = "GitPullRequestRetargetSourceSameAsTarget";
    public const string ShareMessageTooLong = "ShareMessageTooLong";
    public const string GitDuplicateConflictIdSupplied = "GitDuplicateConflictIdSupplied";
    public const string GitDuplicateRefNameSupplied = "GitDuplicateRefNameSupplied";
    public const string PullRequestUpdateRejectedByPolicy = "PullRequestUpdateRejectedByPolicy";
    public const string CustomMessage = "CustomMessage";
    public const string PluginName = "PluginName";
    public const string InvalidConflictId = "InvalidConflictId";
    public const string InvalidRepository = "InvalidRepository";
    public const string StoredProcedureNoLongerSupported = "StoredProcedureNoLongerSupported";
    public const string GitRefLocked = "GitRefLocked";
    public const string DisplayNameForInvalidIdentity = "DisplayNameForInvalidIdentity";
    public const string GitRefLockDenied = "GitRefLockDenied";
    public const string GitRefUnlockDenied = "GitRefUnlockDenied";
    public const string PullRequestCannotBeActivated = "PullRequestCannotBeActivated";
    public const string IBlobProviderTypeNotFound = "IBlobProviderTypeNotFound";
    public const string BlobProviderNoPluginsFound = "BlobProviderNoPluginsFound";
    public const string UnsupportedRefUpdateResultStatus = "UnsupportedRefUpdateResultStatus";
    public const string MissingRefWriteResult = "MissingRefWriteResult";
    public const string DefaultMergeCommitMessage = "DefaultMergeCommitMessage";
    public const string MergeCommitMessage = "MergeCommitMessage";
    public const string GitRefNameConflict = "GitRefNameConflict";
    public const string OldAndNewObjectIdsCannotBeEmpty = "OldAndNewObjectIdsCannotBeEmpty";
    public const string ObjectParseFailed = "ObjectParseFailed";
    public const string UnexpectedEndOfStreamEncountered = "UnexpectedEndOfStreamEncountered";
    public const string GitPathDoesNotExistAtCommit = "GitPathDoesNotExistAtCommit";
    public const string InvalidFilename = "InvalidFilename";
    public const string RenameTargetItemExists = "RenameTargetItemExists";
    public const string PathTooLong = "PathTooLong";
    public const string AddTargetAlreadyExists = "AddTargetAlreadyExists";
    public const string GitmoduleFileMalformed = "GitmoduleFileMalformed";
    public const string BlobTreatedAsTree = "BlobTreatedAsTree";
    public const string MultipleOperationsOnSameFile = "MultipleOperationsOnSameFile";
    public const string GitRefPolicyFailure = "GitRefPolicyFailure";
    public const string UnexpectedObjectType = "UnexpectedObjectType";
    public const string UnexpectedPathObjectType = "UnexpectedPathObjectType";
    public const string GitNeedSystemPermission = "GitNeedSystemPermission";
    public const string GenericDatabaseUpdateError = "GenericDatabaseUpdateError";
    public const string PullRequestRequiredReviewerNotApproved = "PullRequestRequiredReviewerNotApproved";
    public const string CommitIdSetEmpty = "CommitIdSetEmpty";
    public const string PolicyScopeCannotBeEmpty = "PolicyScopeCannotBeEmpty";
    public const string PolicyScopeParsingError = "PolicyScopeParsingError";
    public const string PolicyScopeRepositoriesOnly = "PolicyScopeRepositoriesOnly";
    public const string PolicyScopeFileScopesNotSupported = "PolicyScopeFileScopesNotSupported";
    public const string PolicyJsonReaderExceptionMessage = "PolicyJsonReaderExceptionMessage";
    public const string PolicyJsonReaderExceptionWithLineMessage = "PolicyJsonReaderExceptionWithLineMessage";
    public const string GitMissingReferencedObjectShallowPrefix = "GitMissingReferencedObjectShallowPrefix";
    public const string PolicyPullRequestRequired = "PolicyPullRequestRequired";
    public const string PolicyUnspecifiedRejectionReason = "PolicyUnspecifiedRejectionReason";
    public const string CannotSeekBeforeZero = "CannotSeekBeforeZero";
    public const string PolicyDefaultDiscussionComment = "PolicyDefaultDiscussionComment";
    public const string GitInvalidParentSpecified = "GitInvalidParentSpecified";
    public const string CannotWriteWithoutExclusiveLock = "CannotWriteWithoutExclusiveLock";
    public const string IndexPointerUpdateConflict = "IndexPointerUpdateConflict";
    public const string InvalidPullRequestArtifactUri = "InvalidPullRequestArtifactUri";
    public const string WarningCorruptRefDelete = "WarningCorruptRefDelete";
    public const string WarningNonExistentRefDelete = "WarningNonExistentRefDelete";
    public const string InvalidPullRequestTitle = "InvalidPullRequestTitle";
    public const string HashDoesNotMatch = "HashDoesNotMatch";
    public const string PolicyScopeAccessibleRepositoriesOnly = "PolicyScopeAccessibleRepositoriesOnly";
    public const string PolicyScopeExistingRepositoriesOnly = "PolicyScopeExistingRepositoriesOnly";
    public const string PolicyScopeRepositoryMustBeInProject = "PolicyScopeRepositoryMustBeInProject";
    public const string ContentsCannotBeEmpty = "ContentsCannotBeEmpty";
    public const string LfsInvalidObjectId = "LfsInvalidObjectId";
    public const string LfsObjectNotFound = "LfsObjectNotFound";
    public const string LfsSizeMustBeGreaterThanMinusOne = "LfsSizeMustBeGreaterThanMinusOne";
    public const string LfsUnableToParseReference = "LfsUnableToParseReference";
    public const string Only_And_AreSupported = "Only_And_AreSupported";
    public const string Only_IsSupported = "Only_IsSupported";
    public const string RequestBodyTooLarge = "RequestBodyTooLarge";
    public const string TreeCaseEnforcementError = "TreeCaseEnforcementError";
    public const string GitSettingsPolicyDuplicateProject = "GitSettingsPolicyDuplicateProject";
    public const string BlobTreeEntryName = "BlobTreeEntryName";
    public const string TreeTreeEntryName = "TreeTreeEntryName";
    public const string ServerUnavailableMessage = "ServerUnavailableMessage";
    public const string FileNotFoundInContainer = "FileNotFoundInContainer";
    public const string GitRefArtifactFormat = "GitRefArtifactFormat";
    public const string InvalidGitRefArtifactUri = "InvalidGitRefArtifactUri";
    public const string PullRequestArtifactFormat = "PullRequestArtifactFormat";
    public const string PullRequestCouldNotBeFound = "PullRequestCouldNotBeFound";
    public const string ObjectRejected = "ObjectRejected";
    public const string InvalidPullRequestCommentArtifact = "InvalidPullRequestCommentArtifact";
    public const string LimitedRefCriteriaDuplicateExactMatchException = "LimitedRefCriteriaDuplicateExactMatchException";
    public const string LimitedRefCriteriaExactEntryInNamespaceException = "LimitedRefCriteriaExactEntryInNamespaceException";
    public const string LimitedRefCriteriaNamespacesOverlapException = "LimitedRefCriteriaNamespacesOverlapException";
    public const string GitCommitStatusArgLengthException = "GitCommitStatusArgLengthException";
    public const string GitCommitStatusArgTargetUrlInvalidException = "GitCommitStatusArgTargetUrlInvalidException";
    public const string InvalidObjectType = "InvalidObjectType";
    public const string InvalidPackType = "InvalidPackType";
    public const string GitCommitStatusInvalidStateException = "GitCommitStatusInvalidStateException";
    public const string GitCorruptRepository = "GitCorruptRepository";
    public const string GitCommitMetadataMoveInProgress = "GitCommitMetadataMoveInProgress";
    public const string TfsGitCommitHistoryQueryIsInvalid = "TfsGitCommitHistoryQueryIsInvalid";
    public const string ConsiderUpdateGitMessage = "ConsiderUpdateGitMessage";
    public const string PullRequestIterationNotFound = "PullRequestIterationNotFound";
    public const string PullRequestStatusNotFound = "PullRequestStatusNotFound";
    public const string PullRequestStatusCannotBeCreated = "PullRequestStatusCannotBeCreated";
    public const string PullRequestChangesNotAvailable = "PullRequestChangesNotAvailable";
    public const string PullRequestStatusNameCannotBeUpdated = "PullRequestStatusNameCannotBeUpdated";
    public const string PullRequestStatusGenreCannotBeUpdated = "PullRequestStatusGenreCannotBeUpdated";
    public const string PullRequestCommentThreadNotFound = "PullRequestCommentThreadNotFound";
    public const string PullRequestCommentThreadCreateId = "PullRequestCommentThreadCreateId";
    public const string PullRequestCommentNotFound = "PullRequestCommentNotFound";
    public const string PullRequestCommentAuthorCannotBeUpdated = "PullRequestCommentAuthorCannotBeUpdated";
    public const string PullRequestCommentThreadContextCannotBeUpdated = "PullRequestCommentThreadContextCannotBeUpdated";
    public const string PullRequestCommentThreadPropertiesCannotBeFound = "PullRequestCommentThreadPropertiesCannotBeFound";
    public const string PullRequestCommentWithNoContent = "PullRequestCommentWithNoContent";
    public const string PullRequestCommentWithTooMuchContent = "PullRequestCommentWithTooMuchContent";
    public const string PullRequestPathCannotBeNullForThreadsNotAtReviewLevel = "PullRequestPathCannotBeNullForThreadsNotAtReviewLevel";
    public const string UnsupportedParameterOptions = "UnsupportedParameterOptions";
    public const string ConflictNotResolved = "ConflictNotResolved";
    public const string PartiallyResolvedNotSuppored = "PartiallyResolvedNotSuppored";
    public const string ConflictResolutionPathNotValid = "ConflictResolutionPathNotValid";
    public const string RenamePathNotValid = "RenamePathNotValid";
    public const string MergedContentNotValid = "MergedContentNotValid";
    public const string UnsupportedConflictType = "UnsupportedConflictType";
    public const string PullRequestUnsupportedMergeType = "PullRequestUnsupportedMergeType";
    public const string PullRequestRebaseTooManyCommits = "PullRequestRebaseTooManyCommits";
    public const string PullRequestInternalMergeFailure = "PullRequestInternalMergeFailure";
    public const string PullRequestInvalidNamedReviewer = "PullRequestInvalidNamedReviewer";
    public const string PullRequestInvalidReviewer = "PullRequestInvalidReviewer";
    public const string PullRequestReviewerPermissionNamed = "PullRequestReviewerPermissionNamed";
    public const string PullRequestReviewerPermission = "PullRequestReviewerPermission";
    public const string PullRequestMaxReviewerCount = "PullRequestMaxReviewerCount";
    public const string AsyncRefOperationInvalidOntoRef = "AsyncRefOperationInvalidOntoRef";
    public const string AsyncOperationNotFoundRef = "AsyncOperationNotFoundRef";
    public const string TheCurrentProjectOrRepository = "TheCurrentProjectOrRepository";
    public const string TheCurrentNonBranchRef = "TheCurrentNonBranchRef";
    public const string GitRefFavoriteAlreadyExists = "GitRefFavoriteAlreadyExists";
    public const string AsyncOperationNotFoundId = "AsyncOperationNotFoundId";
    public const string AsyncOperationRequiresSource = "AsyncOperationRequiresSource";
    public const string RevertCommitMessageFormat = "RevertCommitMessageFormat";
    public const string AsyncOperationNotFound = "AsyncOperationNotFound";
    public const string AsyncOperationAlreadyExists = "AsyncOperationAlreadyExists";
    public const string AsyncOperationSourceError = "AsyncOperationSourceError";
    public const string RevertSourceMustBeCompleted = "RevertSourceMustBeCompleted";
    public const string ImportAnalyzingPackFile = "ImportAnalyzingPackFile";
    public const string ImportCompleted = "ImportCompleted";
    public const string ImportProcessingRequest = "ImportProcessingRequest";
    public const string ImportStoringIndexFile = "ImportStoringIndexFile";
    public const string ImportStoringPackFile = "ImportStoringPackFile";
    public const string ImportUpdatingRefs = "ImportUpdatingRefs";
    public const string AsyncRefOperationInvalidGeneratedRef = "AsyncRefOperationInvalidGeneratedRef";
    public const string RefConflict = "RefConflict";
    public const string ErrorGitTemplateNotFound = "ErrorGitTemplateNotFound";
    public const string PullRequestStatusNotEditable = "PullRequestStatusNotEditable";
    public const string GitInvalidDiffContinuationToken = "GitInvalidDiffContinuationToken";
    public const string GitDiffContinuationTokenNotFound = "GitDiffContinuationTokenNotFound";
    public const string AsyncOperationUpdateFailed = "AsyncOperationUpdateFailed";
    public const string GitImportRequestRetryDenied = "GitImportRequestRetryDenied";
    public const string ImportInvalidRepository = "ImportInvalidRepository";
    public const string GitUploadPackDisabledException = "GitUploadPackDisabledException";
    public const string ExplictBypassOptionRequired = "ExplictBypassOptionRequired";
    public const string PoliciesBypassed = "PoliciesBypassed";
    public const string ErrorCreatingTags = "ErrorCreatingTags";
    public const string PullRequestCommentCannotBeUpdated = "PullRequestCommentCannotBeUpdated";
    public const string PullRequestStatusContextNotAvailable = "PullRequestStatusContextNotAvailable";
    public const string PullRequestAttachmentNotFound = "PullRequestAttachmentNotFound";
    public const string PullRequestAttachmentsNotSupported = "PullRequestAttachmentsNotSupported";
    public const string PullRequestWorkItemsTransitionedMessage = "PullRequestWorkItemsTransitionedMessage";
    public const string InvalidUseOfReadOnlyBitmap = "InvalidUseOfReadOnlyBitmap";
    public const string CrossCollectionForkingUnsupported = "CrossCollectionForkingUnsupported";
    public const string ForkingDisabledForRepository = "ForkingDisabledForRepository";
    public const string UnsupportedHttpMethod = "UnsupportedHttpMethod";
    public const string GitRefNameAlreadyExists = "GitRefNameAlreadyExists";
    public const string GitLfsLockDoesNotExist = "GitLfsLockDoesNotExist";
    public const string ExpectedNonemptyPostBody = "ExpectedNonemptyPostBody";
    public const string LfsLockConflict = "LfsLockConflict";
    public const string LfsLockFailedToCreate = "LfsLockFailedToCreate";
    public const string LfsLockMustForceDelete = "LfsLockMustForceDelete";
    public const string LfsLockNotAllowedToDelete = "LfsLockNotAllowedToDelete";
    public const string LfsLockNotAllowedToForceDelete = "LfsLockNotAllowedToForceDelete";
    public const string LfsLockPathTooLong = "LfsLockPathTooLong";
    public const string LfsLockRequireContributeToLock = "LfsLockRequireContributeToLock";
    public const string UnsupportedMediaType = "UnsupportedMediaType";
    public const string LfsLocksMustSpecifyPath = "LfsLocksMustSpecifyPath";
    public const string CannotSyncForkRef = "CannotSyncForkRef";
    public const string ForkRelationshipNotFound = "ForkRelationshipNotFound";
    public const string PullRequestLabelNotFound = "PullRequestLabelNotFound";
    public const string PullRequestLabelNameInvalid = "PullRequestLabelNameInvalid";
    public const string PullRequestLabelNameTooLong = "PullRequestLabelNameTooLong";
    public const string PullRequestLabelNameEmpty = "PullRequestLabelNameEmpty";
    public const string PullRequestLabelNameInvalidCharacters = "PullRequestLabelNameInvalidCharacters";
    public const string GitRefUpdateFailureUnsafeGitmodules = "GitRefUpdateFailureUnsafeGitmodules";
    public const string GitRefUpdateFailureUnsafeDotGit = "GitRefUpdateFailureUnsafeDotGit";
    public const string GitRefUpdateWarningUnsafeEntryPath = "GitRefUpdateWarningUnsafeEntryPath";
    public const string UnsafeGitmodules_Reason_InvalidObjectType = "UnsafeGitmodules_Reason_InvalidObjectType";
    public const string UnsafeGitmodules_Reason_IsSymlink = "UnsafeGitmodules_Reason_IsSymlink";
    public const string UnsafeGitmodules_Reason_UnsafeEntryName = "UnsafeGitmodules_Reason_UnsafeEntryName";
    public const string UnsafeGitmodules_Reason_UnsafeEntryUrl = "UnsafeGitmodules_Reason_UnsafeEntryUrl";
    public const string UnsafeGitmodules_Reason_UnsafeEntryPath = "UnsafeGitmodules_Reason_UnsafeEntryPath";
    public const string UnsafeDotGitFile_Reason_AlternateDataStreams = "UnsafeDotGitFile_Reason_AlternateDataStreams";
    public const string PullRequestStatusPatchRemoveArbitraryPath = "PullRequestStatusPatchRemoveArbitraryPath";
    public const string PullRequestAutoCompleteFailedReason_NotActive = "PullRequestAutoCompleteFailedReason_NotActive";
    public const string PullRequestAutoCompleteFailedReason_PoliciesBlocking = "PullRequestAutoCompleteFailedReason_PoliciesBlocking";
    public const string PullRequestAutoCompleteFailedReason_RepoNotFound = "PullRequestAutoCompleteFailedReason_RepoNotFound";
    public const string PullRequestAutoCompleteFailedReason_SourceOrTargetDeleted = "PullRequestAutoCompleteFailedReason_SourceOrTargetDeleted";
    public const string PullRequestAutoCompleteFailedReason_NoPermissionToComplete = "PullRequestAutoCompleteFailedReason_NoPermissionToComplete";
    public const string PullRequestAutoCompleteFailedReason_UnexpectedError = "PullRequestAutoCompleteFailedReason_UnexpectedError";
    public const string PullRequestDraftCannotComplete = "PullRequestDraftCannotComplete";
    public const string PullRequestDraftCannotVote = "PullRequestDraftCannotVote";
    public const string PullRequestDraftVotesResetReason = "PullRequestDraftVotesResetReason";
    public const string PullRequestDraftDisabled = "PullRequestDraftDisabled";
    public const string PullRequestInvalidReviewerForFlagOrDecline = "PullRequestInvalidReviewerForFlagOrDecline";
    public const string PullRequestCreatorCannotDecline = "PullRequestCreatorCannotDecline";
    public const string PullRequestOnlyCurrentUserCanDecline = "PullRequestOnlyCurrentUserCanDecline";
    public const string GitPullRequestCommitsInvalidContinuationToken = "GitPullRequestCommitsInvalidContinuationToken";
    public const string InvalidDiffContinuationToken_InvalidEncoded = "InvalidDiffContinuationToken_InvalidEncoded";
    public const string InvalidDiffContinuationToken_BaseTreeDoesNotMatch = "InvalidDiffContinuationToken_BaseTreeDoesNotMatch";
    public const string InvalidDiffContinuationToken_TargetTreeDoesNotMatch = "InvalidDiffContinuationToken_TargetTreeDoesNotMatch";
    public const string InvalidDiffContinuationToken_PathMissing = "InvalidDiffContinuationToken_PathMissing";
    public const string InvalidDiffContinuationToken_InvalidObjectType = "InvalidDiffContinuationToken_InvalidObjectType";
    public const string InvalidDiffContinuationToken_InvalidChangeType = "InvalidDiffContinuationToken_InvalidChangeType";
    public const string GitPullRequestCommitsStaleContinuationToken = "GitPullRequestCommitsStaleContinuationToken";
    public const string PullRequestPropertiesNotSupported = "PullRequestPropertiesNotSupported";
    public const string PullRequestStatusRejectedByPolicy = "PullRequestStatusRejectedByPolicy";
    public const string GitCloneForkUpstreamRemoteLine1 = "GitCloneForkUpstreamRemoteLine1";
    public const string GitCloneForkUpstreamRemoteLine2 = "GitCloneForkUpstreamRemoteLine2";
    public const string TheCurrentBranchesRoot = "TheCurrentBranchesRoot";
    public const string SignatureIsEmpty = "SignatureIsEmpty";
    public const string GitRefFavoriteNotFound = "GitRefFavoriteNotFound";
    public const string GitConcurrentCloneTarpitMessage = "GitConcurrentCloneTarpitMessage";
    public const string GitConcurrentCloneBlockMessage = "GitConcurrentCloneBlockMessage";
    public const string FileSizeLimitReached = "FileSizeLimitReached";
    public const string GitPushSizeLimitMessage = "GitPushSizeLimitMessage";
    public const string UnknownGitPushFailureFormat = "UnknownGitPushFailureFormat";
    public const string GitSettingsPolicyDuplicateRepo = "GitSettingsPolicyDuplicateRepo";
    public const string GitApplyResolutionException_MergeContentNotFound = "GitApplyResolutionException_MergeContentNotFound";
    public const string GitApplyResolutionException_InvalidPath = "GitApplyResolutionException_InvalidPath";
    public const string GitApplyResolutionException_PathInUse = "GitApplyResolutionException_PathInUse";
    public const string GitApplyResolutionException_UnknownAction = "GitApplyResolutionException_UnknownAction";
    public const string GitApplyResolutionException_UnknownMergeType = "GitApplyResolutionException_UnknownMergeType";
    public const string GitApplyResolutionException_UnknownError = "GitApplyResolutionException_UnknownError";
    public const string GitConflict = "GitConflict";
    public const string GitOperationFailure = "GitOperationFailure";
    public const string GitPolicyRejection = "GitPolicyRejection";
    public const string GitRefNameConventionNotMet = "GitRefNameConventionNotMet";
    public const string PolicyScopeDefaultBranchKindRefMustBeEmpty = "PolicyScopeDefaultBranchKindRefMustBeEmpty";
    public const string PolicyScopeRefMustNotBeEmpty = "PolicyScopeRefMustNotBeEmpty";
    public const string PullRequestWorkItemsTransitionedUsingDescriptionMessage = "PullRequestWorkItemsTransitionedUsingDescriptionMessage";
    public const string GitFortyHexCharsRefName = "GitFortyHexCharsRefName";
    public const string DiffChangesLimitReached = "DiffChangesLimitReached";
    public const string InvalidAutoCompleteMergeStrategy = "InvalidAutoCompleteMergeStrategy";
    public const string MergeStrategyNotAllowed = "MergeStrategyNotAllowed";
    public const string PullRequestBrokenStateFailedToCreateIteration = "PullRequestBrokenStateFailedToCreateIteration";
    public const string GitHfsFileParseError = "GitHfsFileParseError";
    public const string GitHfsFileDownloadError = "GitHfsFileDownloadError";
    public const string GitHfsBlobDoesNotExistError = "GitHfsBlobDoesNotExistError";
    public const string CannotDeleteProtectedBranch = "CannotDeleteProtectedBranch";

    public static ResourceManager Manager => Microsoft.TeamFoundation.Git.Server.Resources.s_resMgr;

    public static string Get(string resourceName) => Microsoft.TeamFoundation.Git.Server.Resources.s_resMgr.GetString(resourceName, CultureInfo.CurrentUICulture);

    public static string Get(string resourceName, CultureInfo culture) => culture == null ? Microsoft.TeamFoundation.Git.Server.Resources.Get(resourceName) : Microsoft.TeamFoundation.Git.Server.Resources.s_resMgr.GetString(resourceName, culture);

    public static int GetInt(string resourceName) => (int) Microsoft.TeamFoundation.Git.Server.Resources.s_resMgr.GetObject(resourceName, CultureInfo.CurrentUICulture);

    public static int GetInt(string resourceName, CultureInfo culture) => culture == null ? Microsoft.TeamFoundation.Git.Server.Resources.GetInt(resourceName) : (int) Microsoft.TeamFoundation.Git.Server.Resources.s_resMgr.GetObject(resourceName, culture);

    public static bool GetBool(string resourceName) => (bool) Microsoft.TeamFoundation.Git.Server.Resources.s_resMgr.GetObject(resourceName, CultureInfo.CurrentUICulture);

    public static bool GetBool(string resourceName, CultureInfo culture) => culture == null ? Microsoft.TeamFoundation.Git.Server.Resources.GetBool(resourceName) : (bool) Microsoft.TeamFoundation.Git.Server.Resources.s_resMgr.GetObject(resourceName, culture);

    public static string Format(string resourceName, params object[] args) => Microsoft.TeamFoundation.Git.Server.Resources.Format(resourceName, CultureInfo.CurrentUICulture, args);

    public static string Format(string resourceName, CultureInfo culture, params object[] args)
    {
      if (culture == null)
        culture = CultureInfo.CurrentUICulture;
      string format = Microsoft.TeamFoundation.Git.Server.Resources.Get(resourceName, culture);
      if (args == null)
        return format;
      for (int index = 0; index < args.Length; ++index)
      {
        if (args[index] is DateTime)
        {
          DateTime dateTime = (DateTime) args[index];
          Calendar calendar = DateTimeFormatInfo.CurrentInfo.Calendar;
          if (dateTime > calendar.MaxSupportedDateTime)
            args[index] = (object) calendar.MaxSupportedDateTime;
          else if (dateTime < calendar.MinSupportedDateTime)
            args[index] = (object) calendar.MinSupportedDateTime;
        }
      }
      return string.Format((IFormatProvider) CultureInfo.CurrentCulture, format, args);
    }
  }
}
