<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BuildStoppedMachineNonResponsive" xml:space="preserve">
    <value>The build has been forcefully stopped by the server because the build machine did not respond to a stop request.</value>
  </data>
  <data name="BuildServiceHostAlreadyExists" xml:space="preserve">
    <value>A build service host already exists for computer {0}. Specify a different computer name and try again.</value>
  </data>
  <data name="BuildControllerCannotBeDeletedBuildsInProgress" xml:space="preserve">
    <value>The build controller {0} cannot be deleted because there are builds in progress.</value>
  </data>
  <data name="ElasticBuildServiceIdentityName" xml:space="preserve">
    <value>Elastic Build</value>
  </data>
  <data name="ElasticBuildAgentCannotBeAdded" xml:space="preserve">
    <value>The build agent {0} cannot be added to build controller {1} because either the build agent or the build controller is virtual.</value>
  </data>
  <data name="BuildStoppedMachineConnectionLost" xml:space="preserve">
    <value>This build has been stopped automatically by the server due to loss of connectivity to the build machine. All requests included in the build have been placed back into the queue and will be retried when connectivity is restored.</value>
  </data>
  <data name="ElasticBuildAgentCannotBeUpdated" xml:space="preserve">
    <value>The property {0} of build agent {1} cannot be updated because the build agent is virtual.</value>
  </data>
  <data name="BuildControllerExpired" xml:space="preserve">
    <value>The Azure DevOps Server timed out attempting to reestablish communication with the controller.</value>
  </data>
  <data name="CannotDestroyBuildNotDeleted" xml:space="preserve">
    <value>TF277001: Cannot destroy build {0} because it has not been deleted.</value>
  </data>
  <data name="BuildControllerCannotBeDeletedAgentsAssociated" xml:space="preserve">
    <value>The build controller {0} cannot be deleted because there are build agents associated with it.</value>
  </data>
  <data name="BuildControllerAlreadyExistsForServiceHost" xml:space="preserve">
    <value>A build controller is already defined for computer {0}.</value>
  </data>
  <data name="CannotRetryQueuedBuild" xml:space="preserve">
    <value>Queued build {0} on build controller {2} can only be retried if the status is Completed. The status was {1}.</value>
  </data>
  <data name="BuildAgentReservationCannotBeSatisfiedWithTagsMatchExactly" xml:space="preserve">
    <value>The build controller {0} does not contain an enabled build agent with name {1} and tags exactly matching {2}.</value>
  </data>
  <data name="SharedResourceInvalidBuildStatus" xml:space="preserve">
    <value>Cannot request a shared resource lock for build {0} because it is not in progress.</value>
  </data>
  <data name="CannotUpdateQueuedBuild" xml:space="preserve">
    <value>TF215035: Queued build {0} on build controller {2} can only be updated if the status is either Postponed or Queued. The current status is {1}.</value>
  </data>
  <data name="ProcessTemplateDoesNotExist" xml:space="preserve">
    <value>TF277004: The process template with ID {0} does not exist.</value>
  </data>
  <data name="BuildAgentReservationCannotBeSatisfiedVersionMismatch" xml:space="preserve">
    <value>The build controller {0} does not contain an enabled build agent with name {1} and matching Team Foundation Build version.</value>
  </data>
  <data name="BuildServiceHostDoesNotExist" xml:space="preserve">
    <value>The build service host {0} does not exist. Specify a different build service host and try again.</value>
  </data>
  <data name="CannotAddDuplicateProcessTemplate" xml:space="preserve">
    <value>TF277000: A build process template for '{0}' already exists for team project {1}. You cannot create another build process template for the same file. Use the existing one instead.</value>
  </data>
  <data name="BuildAgentAlreadyExistsForController" xml:space="preserve">
    <value>The build agent {0} already exists for build controller {1}. Specify a different name and try again.</value>
  </data>
  <data name="InvalidBuildAgentTag" xml:space="preserve">
    <value>The build agent tag {0} is too long. The maximum allowed length for a build agent tag is 256 characters.</value>
  </data>
  <data name="BuildAgentVersionMismatch" xml:space="preserve">
    <value>TF900559: Build agent {0} cannot serve build controller {1}.  The build controller and agent must run the same version of Team Foundation Build.</value>
  </data>
  <data name="BuildStoppedMachineOffline" xml:space="preserve">
    <value>The build has been forcefully stopped by the server because the build machine is not online.</value>
  </data>
  <data name="BuildAgentReenabled" xml:space="preserve">
    <value>The agent was successfully contacted.</value>
  </data>
  <data name="BuildControllerAlreadyExists" xml:space="preserve">
    <value>The build controller {0} already exists. Specify a different name and try again.</value>
  </data>
  <data name="ElasticBuildControllerCannotBeUpdated" xml:space="preserve">
    <value>The property {0} of build controller {1} cannot be updated because the build controller is virtual.</value>
  </data>
  <data name="BuildControllerStatusChangedByUser" xml:space="preserve">
    <value>{0} changed the controller status.</value>
  </data>
  <data name="BuildServiceHostIsVirtualReserved" xml:space="preserve">
    <value>The IsVirtual property is reserved for system use only.</value>
  </data>
  <data name="BuildAgentAlreadyExistsForServiceHost" xml:space="preserve">
    <value>The build agent {0} already exists for computer {1}. Specify a different name and try again.</value>
  </data>
  <data name="BuildAgentStatusAutomaticallyChanged" xml:space="preserve">
    <value>The agent status has been changed by the Azure DevOps Server at {1} UTC.
Reason: {0}</value>
  </data>
  <data name="BuildStoppedMachineConnectionLostNoRetry" xml:space="preserve">
    <value>This build has been stopped automatically by the server due to loss of connectivity to the build machine.</value>
  </data>
  <data name="BuildAgentStatusChangedByUser" xml:space="preserve">
    <value>{0} changed the agent status.</value>
  </data>
  <data name="BuildAgentDoesNotExist" xml:space="preserve">
    <value>TF215010: The build agent {0} does not exist. Specify a different build agent and try again.</value>
  </data>
  <data name="SharedResourceRequesterCannotBeContacted" xml:space="preserve">
    <value>The shared resource requester {0} cannot be contacted.</value>
  </data>
  <data name="CannotSatisfyQueuePosition" xml:space="preserve">
    <value>TF215036: The build request cannot be queued at or below position {1} on build controller {0}. The resulting position would be {2}.</value>
  </data>
  <data name="ElasticBuildAgentCannotBeDeleted" xml:space="preserve">
    <value>The build agent {0} cannot be deleted because it is virtual.</value>
  </data>
  <data name="BuildServiceHostOwnershipException" xml:space="preserve">
    <value>The build service host {0} is owned by a different client. A service host may only be active on one client at a time.</value>
  </data>
  <data name="QueuedBuildDoesNotExist" xml:space="preserve">
    <value>The build request with id {0} could not be found.</value>
  </data>
  <data name="BuildAgentReservationCannotBeSatisfiedMatchExactly" xml:space="preserve">
    <value>The build controller {0} does not contain an enabled build agent with name {1} and no tags.</value>
  </data>
  <data name="CannotCancelQueuedBuild" xml:space="preserve">
    <value>TF215067: Cannot cancel queued build {0} on build controller {2}. The current status is {1} and queued builds can only be canceled if the status is either Postponed or Queued.</value>
  </data>
  <data name="BuildControllerDoesNotExistForComputer" xml:space="preserve">
    <value>A build controller does not exist for computer {0}.</value>
  </data>
  <data name="ElasticBuildServiceHostCannotBeDeleted" xml:space="preserve">
    <value>The build service host {0} cannot be deleted because it is virtual.</value>
  </data>
  <data name="MultipleUpgradeProcessTemplates" xml:space="preserve">
    <value>TF277003: Cannot add more than one upgrade process template for team project {0}.</value>
  </data>
  <data name="BuildControllerDoesNotExist" xml:space="preserve">
    <value>The build controller {0} does not exist. Specify a different build controller and try again.</value>
  </data>
  <data name="MultipleDefaultProcessTemplates" xml:space="preserve">
    <value>TF277002: Cannot add more than one default process template for team project {0}.</value>
  </data>
  <data name="BuildAgentCannotBeMovedWhileReserved" xml:space="preserve">
    <value>The build agent {0} cannot be removed from build controller {1} because it is currently reserved for a build.</value>
  </data>
  <data name="SharedResourceAlreadyRequested" xml:space="preserve">
    <value>The shared resource {0} has already been requested by {1}.</value>
  </data>
  <data name="AdministrativeActionDenied" xml:space="preserve">
    <value>TF277005: Access denied. {0} needs the {1} privilege to perform this action. For more information, contact the Azure DevOps Server administrator.</value>
  </data>
  <data name="BuildAgentReservationCannotBeSatisfiedWithTags" xml:space="preserve">
    <value>The build controller {0} does not contain an enabled build agent with name {1} containing tags {2}.</value>
  </data>
  <data name="QueuedBuildDoesNotExistForUri" xml:space="preserve">
    <value>No queued build exists for build {0}.</value>
  </data>
  <data name="BuildAgentReservationInvalidBuildStatus" xml:space="preserve">
    <value>Cannot reserve a build agent for build {0} because it is not in progress.</value>
  </data>
  <data name="BuildControllerStatusAutomaticallyChanged" xml:space="preserve">
    <value>The controller status has been changed by the Azure DevOps Server at {1} UTC.
Reason: {0}</value>
  </data>
  <data name="SharedResourceAlreadyAcquired" xml:space="preserve">
    <value>The shared resource {0} has already been acquired by {1}.</value>
  </data>
  <data name="ElasticBuildServiceHostCannotBeUpdated" xml:space="preserve">
    <value>The property {0} of build service host {1} cannot be updated because the build service host is virtual.</value>
  </data>
  <data name="BuildControllerReenabled" xml:space="preserve">
    <value>The controller was successfully contacted.</value>
  </data>
  <data name="ListSeparatorFormat" xml:space="preserve">
    <value>, {0}</value>
  </data>
  <data name="BuildAgentReservationCannotBeSatisfied" xml:space="preserve">
    <value>The build controller {0} does not contain an enabled build agent with name {1}.</value>
  </data>
  <data name="BuildAgentExpired" xml:space="preserve">
    <value>The Azure DevOps Server timed out attempting to reestablish communication with the agent.</value>
  </data>
  <data name="BuildServiceHostOwnershipExceptionWithOwner" xml:space="preserve">
    <value>The build service host {0} is currently owned by {1}. A service host may only be active on one machine at a time.</value>
  </data>
  <data name="ElasticBuildControllerCannotBeDeleted" xml:space="preserve">
    <value>The build controller {0} cannot be deleted because it is virtual.</value>
  </data>
</root>