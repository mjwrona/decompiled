<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Header_User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="Capacity_RemoveActivity" xml:space="preserve">
    <value>Remove this activity</value>
  </data>
  <data name="Dialog_EndWithinIteration" xml:space="preserve">
    <value>End date must be within the current iteration</value>
  </data>
  <data name="Capacity_DaysOff" xml:space="preserve">
    <value>{0} days</value>
  </data>
  <data name="Dialog_DateRangeOverlap" xml:space="preserve">
    <value>Date range is overlapping another date range</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Capacity_DayOff" xml:space="preserve">
    <value>{0} day</value>
  </data>
  <data name="Header_DaysOff" xml:space="preserve">
    <value>Days off</value>
  </data>
  <data name="Capacity_AddActivity" xml:space="preserve">
    <value>Add an activity</value>
  </data>
  <data name="Dialog_StartWithinIteration" xml:space="preserve">
    <value>Start date must be within the current iteration</value>
  </data>
  <data name="Header_StartDateAria" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="Capacity_CopyPrevious_Info" xml:space="preserve">
    <value>You have not set your capacity. You may copy capacity from the last sprint.</value>
  </data>
  <data name="Dialog_AddAdditionalDaysOff" xml:space="preserve">
    <value>Add additional days off</value>
  </data>
  <data name="TeamDaysOffDescriptionText" xml:space="preserve">
    <value>These days off apply to the whole team.</value>
  </data>
  <data name="Capacity_UserIsNotMaterializedYet" xml:space="preserve">
    <value>Users who have never logged in cannot be added to capacity planning.</value>
  </data>
  <data name="Capacity_UserAlreadyHasCapacity" xml:space="preserve">
    <value>This user has already been added to capacity planning for this iteration.</value>
  </data>
  <data name="NoPermission" xml:space="preserve">
    <value>You do not have permission to make changes.</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="TeamDaysOff" xml:space="preserve">
    <value>Team days off</value>
  </data>
  <data name="Header_EndDate" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Dialog_EndLaterThanStart" xml:space="preserve">
    <value>The end date must be later than the start date</value>
  </data>
  <data name="AddUser" xml:space="preserve">
    <value>Add user</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions...</value>
  </data>
  <data name="Dialog_StartDateRequired" xml:space="preserve">
    <value>Start date is required</value>
  </data>
  <data name="Capacity_RemoveUser" xml:space="preserve">
    <value>Remove this user</value>
  </data>
  <data name="AddUserTitle" xml:space="preserve">
    <value>Find a user</value>
  </data>
  <data name="AddMissingTeamMembers" xml:space="preserve">
    <value>Add all team members</value>
  </data>
  <data name="Dialog_DaysOffForEntireTeam" xml:space="preserve">
    <value>Days off for the entire team</value>
  </data>
  <data name="Capacity_NoMoreTeamMembers" xml:space="preserve">
    <value>There are no more team members to add to this iteration's capacity. Click 'Add user' to add users outside of your team.</value>
  </data>
  <data name="Header_EndDateAria" xml:space="preserve">
    <value>End date</value>
  </data>
  <data name="Dialog_DaysOffForPerson" xml:space="preserve">
    <value>Days off for: {0}</value>
  </data>
  <data name="Header_StartDate" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Dialog_EndDateRequired" xml:space="preserve">
    <value>End date is required</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy from last sprint</value>
  </data>
  <data name="Undo" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Header_CapacityPerDay" xml:space="preserve">
    <value>Capacity per day</value>
  </data>
</root>