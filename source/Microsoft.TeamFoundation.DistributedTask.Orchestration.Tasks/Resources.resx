<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="JobTimedOutWaitingForEvent" xml:space="preserve">
    <value>The job timed out after waiting {0} minutes for the event {1}.</value>
  </data>
  <data name="TargetExcluded" xml:space="preserve">
    <value>Skipped deployment to the target '{0}' because either the target is disabled or deleted during deployment.</value>
  </data>
  <data name="TargetOffline" xml:space="preserve">
    <value>Unable to deploy to the target '{0}' as the target is offline.</value>
  </data>
  <data name="InvalidServerTask" xml:space="preserve">
    <value>Server task is not valid for orchestration. The input should contain task details.</value>
  </data>
  <data name="DelayForMinutesInputNotFound" xml:space="preserve">
    <value>DelayForMinutes input is not available in the list of inputs. Make sure it is available and try again.</value>
  </data>
  <data name="ServerTaskTimedOutWaitingForEvent" xml:space="preserve">
    <value>The task timed out after waiting {0} minutes for the event {1}.</value>
  </data>
  <data name="JobCancelTimeout" xml:space="preserve">
    <value>Agent {0} did not respond to a cancelation request with {1}.</value>
  </data>
  <data name="DeploymentSkippedOnTarget" xml:space="preserve">
    <value>Skipped deployment to the target '{0}' due to unknown reason. Try again.</value>
  </data>
  <data name="CouldNotFetchInstallationToken" xml:space="preserve">
    <value>Could not generate access token from GitHub.</value>
  </data>
  <data name="InvalidServerJob" xml:space="preserve">
    <value>Server job is not valid for orchestration. A job should contain exactly one task.</value>
  </data>
  <data name="JobAbandoned" xml:space="preserve">
    <value>We stopped hearing from agent {0}. Verify the agent machine is running and has a healthy network connection. Anything that terminates an agent process, starves it for CPU, or blocks its network access can cause this error. For more information, see: https://go.microsoft.com/fwlink/?linkid=846610</value>
  </data>
  <data name="ServerTaskCancellationTimedOut" xml:space="preserve">
    <value>Failed to cancel the task within the maximum cancel timeout of {0} minutes.</value>
  </data>
  <data name="DemandsNotMet" xml:space="preserve">
    <value>Unable to deploy to the target '{0}' as some of the following demands are missing: [{1}]. Ensure the target meets the specified demands and try again.</value>
  </data>
  <data name="ServerJobTimedOut" xml:space="preserve">
    <value>The task timed out after running for the maximum server job time of {0} minutes.</value>
  </data>
  <data name="NoTargetFound" xml:space="preserve">
    <value>No target found in given deployment group.</value>
  </data>
  <data name="JobTimedOut" xml:space="preserve">
    <value>The job running on agent {0} ran longer than the maximum time of {1} minutes. For more information, see https://go.microsoft.com/fwlink/?linkid=2077134</value>
  </data>
  <data name="DeploymentHealthNotMet" xml:space="preserve">
    <value>Unable to deploy to the target '{0}' as the Deployment Group deployment configuration settings are not met.</value>
  </data>
  <data name="PipelineJobCancelFailFast" xml:space="preserve">
    <value>The job was canceled because "{0}" failed.</value>
  </data>
  <data name="JobCancelFailFast" xml:space="preserve">
    <value>The job has been canceled because {0} did not complete successfully and ContinueOnError is set to false.</value>
  </data>
  <data name="ServerJob4TimedOut" xml:space="preserve">
    <value>The job timed out after running for the maximum server job time of {0} minutes.</value>
  </data>
  <data name="JobAbandonedNotStarted" xml:space="preserve">
    <value>The request: {0} was abandoned due to an infrastructure failure. Notification of assignment to an agent was never received.</value>
  </data>
  <data name="UnableToStartPipelineNoStartingPhase" xml:space="preserve">
    <value>Unable to determine a starting point for pipeline {0} because the orchestrator is not able to locate a job with 0 dependencies.</value>
  </data>
  <data name="NoTargetFoundWithGivenTags" xml:space="preserve">
    <value>No target found in given deployment group with tags {0}.</value>
  </data>
  <data name="ServerTaskTimedOut" xml:space="preserve">
    <value>The task timed out after running for {0} minutes. For more information, see https://go.microsoft.com/fwlink/?linkid=2077134</value>
  </data>
  <data name="InvalidDelayForMinutes" xml:space="preserve">
    <value>Specified value '{0}' is not valid. You must specify an integer from 0 to {1} or a variable, ex:- $(testvariable).</value>
  </data>
  <data name="ServerJobExecutionTimedOut" xml:space="preserve">
    <value>The job timed out after running for {0} minutes.</value>
  </data>
</root>