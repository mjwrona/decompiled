<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MemberAlreadyExistsInGroup" xml:space="preserve">
    <value>Member already exists in group.</value>
  </data>
  <data name="ProcessFinished" xml:space="preserve">
    <value>Process finished: fileName={0} arguments={1} exitCode={2} in {3} ms</value>
  </data>
  <data name="StopIIS" xml:space="preserve">
    <value>Stopping IIS...</value>
  </data>
  <data name="ServiceExecutableStillRunning" xml:space="preserve">
    <value>TF255215: The following executable is still running: {0}. This executable is associated with the following service: {1}.</value>
  </data>
  <data name="InvalidIISUserGroup" xml:space="preserve">
    <value>TF255174: The user group in Internet Information Services (IIS) could not be determined. The following group does not exist: {0}.</value>
  </data>
  <data name="ResetIISFileNotFound" xml:space="preserve">
    <value>TF55024: IisReset.exe not found or access denied.</value>
  </data>
  <data name="ServiceUninstallFailed" xml:space="preserve">
    <value>TF255426: An error occurred while uninstalling the following Windows service: {0}. For more information, open Event Viewer and review the application log.</value>
  </data>
  <data name="MakeCertFailedNoCert" xml:space="preserve">
    <value>An error occurred while generating service certificate. MakeCert.exe reported success, but certificate cannot be located in the store.</value>
  </data>
  <data name="MemberNotExist" xml:space="preserve">
    <value>Member does not exist.</value>
  </data>
  <data name="ProcessStarted" xml:space="preserve">
    <value>Process started fileName={0} arguments={1} in {2} ms</value>
  </data>
  <data name="FileAlreadyExists" xml:space="preserve">
    <value>The file '{0}' already exists.</value>
  </data>
  <data name="ErrorOperationWithReturnCode" xml:space="preserve">
    <value>Error performing operation {0} with return code {1}</value>
  </data>
  <data name="FailedToDownloadSqlExpressInstaller" xml:space="preserve">
    <value>Configuration failed to download the SQL Express installer from the download URL {0}. To proceed, you can either (a) ensure that you have network access and then retry configuration; (b) download the installer yourself and place it in "{1}" so that configuration can install it for you; or (c) download and install SQL Express yourself. For more information on the failure, see the configuration log.</value>
  </data>
  <data name="TfsBuiltInGroupsComment" xml:space="preserve">
    <value>Built-in group used by Azure DevOps Server</value>
  </data>
  <data name="StartIIS" xml:space="preserve">
    <value>Starting IIS...</value>
  </data>
  <data name="FileDownloadedSignatureVerificationFailed" xml:space="preserve">
    <value>SQL Express installer was downloaded successfully, but signature verification failed.</value>
  </data>
  <data name="FailedToDeleteSslSniServerCertificateBinding" xml:space="preserve">
    <value>An error occurred while deleting an Ssl server certificate binding for host '{0}' and port {1}. See log for details.</value>
  </data>
  <data name="AttemptingToRemoveRecoveryActions" xml:space="preserve">
    <value>Attempting to remove recovery actions for service {0} prior to uninstall.</value>
  </data>
  <data name="FailedToDeleteSslServerCertificateBinding" xml:space="preserve">
    <value>An error occurred while deleting an Ssl server certificate binding for ip address '{0}' and port {1}. See log for details.</value>
  </data>
  <data name="FailedToDownloadFile" xml:space="preserve">
    <value>Configuration failed to download from the URL {0}.Ensure that you have network access and then retry configuration.</value>
  </data>
  <data name="SkippingUninstallOfService" xml:space="preserve">
    <value>Skipping uninstall of service {0} since it is not installed</value>
  </data>
  <data name="AttemptingToStopService" xml:space="preserve">
    <value>Attempting to stop service {0}</value>
  </data>
  <data name="StopService" xml:space="preserve">
    <value>Waiting for service {0} to stop...</value>
  </data>
  <data name="AccessDenied" xml:space="preserve">
    <value>Access Denied</value>
  </data>
  <data name="SslSniServerCertificateBindingAlreadyInUse" xml:space="preserve">
    <value>An Ssl server certificate binding for host '{0}' and port {1} is already in use.</value>
  </data>
  <data name="ProblemRemovingRecoveryActions" xml:space="preserve">
    <value>Problem removing recovery actions from service {0} prior to uninstall: {1}</value>
  </data>
  <data name="ResetIIS" xml:space="preserve">
    <value>Resetting IIS...</value>
  </data>
  <data name="ServicingOperationNotValidDuringAppServicing" xml:space="preserve">
    <value>TF255240: The following operation is not valid: {0}. This operation was not found under the {1} servicing operation target.</value>
  </data>
  <data name="SslServerCertificateBindingIsAlreadyInUse" xml:space="preserve">
    <value>An Ssl server certificate binding for ip address '{0}' and port {1} is already in use.</value>
  </data>
  <data name="MediaIncorrectlyFormed" xml:space="preserve">
    <value>TF400932: '{0}' cannot be restored. Ensure that the backup is valid for this version of SQL Server.</value>
  </data>
  <data name="MemberNotInGroup" xml:space="preserve">
    <value>User {0} was not an existing member of group {1}</value>
  </data>
  <data name="GroupNotExist" xml:space="preserve">
    <value>Group does not exist</value>
  </data>
  <data name="MissingPasswordForAccount" xml:space="preserve">
    <value>TF228002: A password is required for the user account {0}.</value>
  </data>
  <data name="FailedToCreateSslServerCertificateBinding" xml:space="preserve">
    <value>An error occurred while creating an Ssl server certificate binding for ip address '{0}' and port {1}. See log for details.</value>
  </data>
  <data name="ServiceCantBeStopped" xml:space="preserve">
    <value>TF255211: The following service cannot be stopped: {0}. The current state is {1}. The attempt to stop the service will be skipped.</value>
  </data>
  <data name="ProcessStarting" xml:space="preserve">
    <value>Process starting: fileName={0} arguments={1}</value>
  </data>
  <data name="ProblemStoppingService" xml:space="preserve">
    <value>TF255086: The following service could not be stopped: {0}: {1}. You might need to manually stop the service.</value>
  </data>
  <data name="UninstallingService" xml:space="preserve">
    <value>Uninstalling service {0}</value>
  </data>
  <data name="MakeCertFailed" xml:space="preserve">
    <value>An error occurred while generating service certificate. Error message: {0}</value>
  </data>
  <data name="FrameworkFileNotFound" xml:space="preserve">
    <value>TF255182: The following file could not be found: {1}. The version of the .NET Framework is {0}.</value>
  </data>
  <data name="FrameworkNotFoundByFilter" xml:space="preserve">
    <value>TF255183: The version of .NET Framework that begins with the following value could not be found: {0}.</value>
  </data>
  <data name="ServiceStillDefined" xml:space="preserve">
    <value>TF255216: The following service is still defined in the registry: {0}. Start value is {1}. DeleteFlag value is {2}.</value>
  </data>
  <data name="StartService" xml:space="preserve">
    <value>Starting service {0}...</value>
  </data>
  <data name="FailedToResetIIS" xml:space="preserve">
    <value>TF255124: Internet Information Services (IIS) could not be reset. You will need to manually restart IIS using IisReset.exe or restart your computer.</value>
  </data>
  <data name="GroupAlreadyExists" xml:space="preserve">
    <value>During group create, group {0} already existed</value>
  </data>
  <data name="ServicingAssemblyRequired" xml:space="preserve">
    <value>TF800063: At least 1 servicing data assembly is required to load servicing operations to the data tier.</value>
  </data>
  <data name="FailedToCreateSslSniServerCertificateBinding" xml:space="preserve">
    <value>An error occurred while creating an Ssl server certificate binding for host '{0}' and port {1}. See log for details.</value>
  </data>
  <data name="InvalidGroupName" xml:space="preserve">
    <value>Invalid group name.</value>
  </data>
</root>