<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_FeedViewNotReleased" xml:space="preserve">
    <value>The feed view name '{0}' will be available soon for the feed with ID '{1}'.</value>
  </data>
  <data name="Error_InvalidVersionMessage" xml:space="preserve">
    <value>The version '{0}' is not valid for '{1}'.</value>
  </data>
  <data name="Error_CannotUseViewNotation" xml:space="preserve">
    <value>The attempted operation does not allow the feed@view notation, remove the view name from the feed name and try again.</value>
  </data>
  <data name="Error_PackageVersionPackageIdAndVersionIdNotFoundMessage" xml:space="preserve">
    <value>The package with ID '{0}' at version '{1}' was not found in feed with ID {2}.</value>
  </data>
  <data name="Error_GenericDatabaseFailure" xml:space="preserve">
    <value>An error ocurred in the database, please try again.</value>
  </data>
  <data name="Error_FeedNotReleased" xml:space="preserve">
    <value>The feed name '{0}' is currently reserved because a feed with that name was either recently renamed or is in the recycle bin.</value>
  </data>
  <data name="Error_PackageLimitExceededMessage" xml:space="preserve">
    <value>Getting the top '{0}' packages while skipping '{1}' exceeds the maximum number of packages allowed.</value>
  </data>
  <data name="Error_UnknownDatabaseErrorOcurred" xml:space="preserve">
    <value>An unknown database error has occurred ({0}).</value>
  </data>
  <data name="Error_FeedLacksPermissions" xml:space="preserve">
    <value>User '{0}' lacks permission to complete this action. You need to have '{1}'.</value>
  </data>
  <data name="Error_FeedPermissionsRemovalFailedMessage" xml:space="preserve">
    <value>Unable to remove permissions from the feed.</value>
  </data>
  <data name="Error_InvalidPackageIdMessage" xml:space="preserve">
    <value>The package ID '{0}' is not valid. The package ID must be a Guid</value>
  </data>
  <data name="Error_FeedAlreadyExistsMessage" xml:space="preserve">
    <value>A feed named '{0}' already exists.</value>
  </data>
  <data name="Error_InvalidNuGetPackageIdMessage" xml:space="preserve">
    <value>The package ID '{0}' is not valid. The package ID must be in the format 'NuGet_PackageName'</value>
  </data>
  <data name="Error_ProtocolNotSupportedMessage" xml:space="preserve">
    <value>The protocol '{0}' is not supported.</value>
  </data>
  <data name="Error_InvalidUserInputMessage" xml:space="preserve">
    <value>The user input was invalid for '{0}'</value>
  </data>
  <data name="Error_FeedIsReadOnlyMessage" xml:space="preserve">
    <value>Feed '{0}' is marked as read-only, cannot make changes.</value>
  </data>
  <data name="Error_ViewPermissionsInvalidRoleMessage" xml:space="preserve">
    <value>Only reader roles can be added to a view.</value>
  </data>
  <data name="Error_InvalidPackageVersionPatchMessage" xml:space="preserve">
    <value>Invalid patch. Currently the only patch operation supported is [{"op"="add", "path"="/isListed", "value"=&lt;bool&gt;}] or  [{"op"="replace", "path"="/isListed", "value"=&lt;bool&gt;}], and at least one patch value must be supplied.</value>
  </data>
  <data name="Error_FeedViewAlreadyExistsMessage" xml:space="preserve">
    <value>A feed view named '{0}' already exists for feed with ID '{1}'.</value>
  </data>
  <data name="Error_PackageNotFoundMessage" xml:space="preserve">
    <value>The {0} package named '{1}' was not found in feed with ID {2}.</value>
  </data>
  <data name="Error_NullSecurityNamespaceMessage" xml:space="preserve">
    <value>The SecurityNamespace is null.</value>
  </data>
  <data name="Error_FeedViewIdNotFoundMessage" xml:space="preserve">
    <value>The feed view with ID '{0}' doesn't exist in feed with ID {1}.</value>
  </data>
  <data name="Error_PackageVersionFromTypeAndNameNotFoundMessage" xml:space="preserve">
    <value>The {0} package '{1}' at version '{2}' was not found in feed with name '{3}'.</value>
  </data>
  <data name="Error_LabelNameNotFoundMessage" xml:space="preserve">
    <value>The label view with name '{0}' doesn't exist.</value>
  </data>
  <data name="Error_NoLatestVersionWasFoundForPackage" xml:space="preserve">
    <value>No latest version was found for package '{0}'.</value>
  </data>
  <data name="Error_PackageVersionPackageIdAndVersionIdDeletedMessage" xml:space="preserve">
    <value>The package with ID '{0}' at version '{1}' was deleted in feed with ID {2}.</value>
  </data>
  <data name="Error_FeedPermissionsInvalidRoleMessage" xml:space="preserve">
    <value>The provided role isn't valid.</value>
  </data>
  <data name="Error_FeedViewNotFoundMessage" xml:space="preserve">
    <value>The feed view with name '{0}' doesn't exist.</value>
  </data>
  <data name="Error_InvalidAliasMessage" xml:space="preserve">
    <value>Invalid alias '{0}'. To specify the current user, use 'me'.</value>
  </data>
  <data name="Error_PackageVersionPackageIdAndNormalizedVersionNotFound" xml:space="preserve">
    <value>The package with ID '{0}' at version '{1}' was not found in feed with ID {2}.</value>
  </data>
  <data name="Error_KnownDBStateIsNoLongerValid" xml:space="preserve">
    <value>The known state of the database is no longer valid. Please try again.</value>
  </data>
  <data name="Error_PackageVersionPackageIdAndNormalizedVersionDeletedMessage" xml:space="preserve">
    <value>The package with ID '{0}' at version '{1}' was deleted in feed with ID {2}.</value>
  </data>
  <data name="Error_PackagesCollectionWithDifferentIdsMessage" xml:space="preserve">
    <value>The package collection contains different IDs, it should only contain one.</value>
  </data>
  <data name="Error_PackageVersionFromIdNotFoundMessage" xml:space="preserve">
    <value>The package with ID '{0}' does not have a version with ID '{1}' in feed with ID {2}.</value>
  </data>
  <data name="Error_NullIdentityMessage" xml:space="preserve">
    <value>The Identity is null.</value>
  </data>
  <data name="Error_PackageVersionAlreadyExistsMessage" xml:space="preserve">
    <value>A package with name: '{0}' and version '{1}' already exists.</value>
  </data>
  <data name="Error_PackageNotFoundByIdInFeedIdMessage" xml:space="preserve">
    <value>The package with ID '{0}' was not found in feed with ID {1}.</value>
  </data>
  <data name="Error_FeedIdNotFoundMessage" xml:space="preserve">
    <value>The feed with ID '{0}' doesn't exist.</value>
  </data>
  <data name="Error_PackageVersionPackageIdAndVersionIdNotFoundInRecycleBinMessage" xml:space="preserve">
    <value>The package with ID '{0}' at version '{1}' was not found in the recycle bin for the feed with ID {2}.</value>
  </data>
  <data name="Error_UnallowedUserIdMessage" xml:space="preserve">
    <value>The authenticated user is not allowed to make this request on behalf of user ID '{0}'. To specify the current user, use 'me'.</value>
  </data>
</root>